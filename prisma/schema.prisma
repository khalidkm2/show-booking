// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Show {
  id Int @id @default(autoincrement())
  title String
  startingTime DateTime
  seats Seat[]
  reservations Reservation[]
  userId Int
  user User @relation(fields: [userId], references: [id])
}

enum Status {
  CONFIRMED
  CANCELLED
}

model Reservation {
  id Int @id @default(autoincrement())
  showId Int
  seatId Int
  userId Int
  user User @relation(fields: [userId], references: [id])
  seat Seat @relation(fields: [seatId], references: [id])
  show Show @relation(fields: [showId], references: [id])
  status Status
}

model Seat {
  id Int @id @default(autoincrement())
  row String
  column Int
  seatNo String
  isBooked Boolean
  showId Int
  show Show @relation(fields: [showId], references: [id])
  reservations Reservation[]
  
  @@unique([showId, seatNo]) // ensures seatNo unique per show
}


model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  reservations Reservation[]
  role Role @default(USER)
  shows Show[]
}

enum Role {
  ADMIN
  USER
}
